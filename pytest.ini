[tool:pytest]
# Configuração para testes Python (pytest)
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

# Marcadores de teste
markers =
    unit: marca um teste como teste unitário
    integration: marca um teste como teste de integração
    backend: marca um teste como teste de backend
    frontend: marca um teste como teste de frontend
    slow: marca um teste como lento
    api: marca um teste de API
    geolocation: marca um teste de geolocalização
    pdf: marca um teste de exportação PDF

# Filtros de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Configuração de cobertura
[coverage:run]
source = src/
omit = 
    tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod
